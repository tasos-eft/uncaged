//Black
$black-50: 		rgba(0,0,0,0.5);
$black-10: 		rgba(0,0,0,0.1);

//TRANSPARENT
$transparent: 		rgba(255,255,255,0);

//GOLD
$tiger-yellow: rgba(249, 157, 28, 1);

$hover: all, 0.25s, cubic-bezier(0.62,0.28,0.23,0.99);
$hover-slow: all, 0.5s, cubic-bezier(0.62,0.28,0.23,0.99);
$slide: all, 0.75s, cubic-bezier(0.62,0.28,0.23,0.99);
$slide-slow: all, 1s, cubic-bezier(0.62,0.28,0.23,0.99);

// FONTS
@charset "UTF-8";

@font-face {
    font-family: Arquitecta;
    src: url(../assets/fonts/arquitecta.eot);
    src: url(../assets/fonts/arquitecta.eot?#iefix) format('embedded-opentype'), url(../assets/fonts/arquitecta.woff) format('woff'), url(../assets/fonts/arquitecta.ttf) format('truetype'), url(../assets/fonts/arquitecta.svg#ywftsvg) format('svg');
    font-weight: 400;
    font-style: normal
}

@font-face {
    font-family: ArquitectaLight;
    src: url(../assets/fonts/arquitecta-light.eot);
    src: url(../assets/fonts/arquitecta-light.eot?#iefix) format('embedded-opentype'), url(../assets/fonts/arquitecta-light.woff) format('woff'), url(../assets/fonts/arquitecta-light.ttf) format('truetype'), url(../assets/fonts/arquitecta-light.svg#ywftsvg) format('svg');
    font-weight: 400;
    font-style: normal
}

//MIXINS
@mixin border-box {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}
/* ADDS A BROWSER PREFIX TO THE PROPERTY */
@mixin css3-prefix($property, $value) {
    -webkit-#{$property}: #{$value};
    -khtml-#{$property}: #{$value};
    -moz-#{$property}: #{$value};
    -ms-#{$property}: #{$value};
    -o-#{$property}: #{$value};
    #{$property}: #{$value};
}
/* TRANSITION */
@mixin transition($what: all, $length: 1s, $easing: ease-in-out) {
    @include css3-prefix('transition', $what $length $easing);
}

//Sass Mixin for typekit variation-specific font-family names
//Typekit IE6-8 Support (http://help.typekit.com/customer/portal/articles/6855-Using-multiple-weights-and-styles)

//Based on https://gist.github.com/plapier/3988984
$arial-font-stack: Arial, "Helvetica Neue", Helvetica, sans-serif !default;
// Must include fallbacks for EACH typekit font — set them each as variables
//************************************************************************//
$typekit-fonts:     ' ', ' ';  // index [1, 2]
$typekit-fallbacks:  $arial-font-stack;

@mixin font($weight: 400, $style: normal, $font: 1) {
    $font-weight: $weight;
    $font-style:  $style;

    // Translate Weight
    @if ($weight == 100) or ($weight == thin) or ($weight == ultralight) {
        $weight: 1;
    }
    @if ($weight == 200) or ($weight == extralight) {
        $weight: 2;
    }
    @if ($weight == 300) or ($weight == light) {
        $weight: 3;
    }
    @if ($weight == 400) or ($weight == normal) or ($weight == regular) {
        $weight: 4;
    }
    @if ($weight == 500) or ($weight == medium) {
        $weight: 5;
    }
    @if ($weight == 600) or ($weight == semibold) or ($weight == demi) {
        $weight: 6;
    }
    @if ($weight == 700) or ($weight == bold) {
        $weight: 7;
    }
    @if ($weight == 800) or ($weight == extrabold) {
        $weight: 8;
    }
    @if ($weight == 900) or ($weight == black) or ($weight == heavy) {
        $weight: 9;
    }

    // Translate Style
    @if $style == normal {
        $style: n;
    }
    @else if $style == italic {
        $style: i;
    }
}

/* TRANSFORM  */
@mixin transform($params) {
    @include css3-prefix('transform', $params);
}

//RESET
html,body,input,button {
    -webkit-text-size-adjust: none;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
}

body,h1,h2,h3,h4,h5,h6,ul,ol,p,hr,form {
    margin: 0px;
    padding: 0px;
    border: none;
}

html, body, body div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, abbr, address, cite, code, del, dfn, em, img, ins, kbd, q, samp, small, strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, figure, footer, header, menu, nav, section, time, mark, audio, video, details, summary {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font-weight: normal;
    vertical-align: baseline;
    background: transparent;
}

//HTML5 fix
section,nav,article,aside,header,footer,main,figure,figcaption { display: block; }

hr          { float: left; width: 100%; height: 1px; }
ul,ol       { list-style: none; }

//text selection
::selection { background: rgba(255,255,255,0); color: $tiger-yellow; }
::-moz-selection { background: rgba(255,255,255,0); color: $tiger-yellow; }

textarea { resize: vertical; }
input:focus, textarea:focus, select:focus { outline: none; }

*:before, *:after, * {
    @include border-box();
}
//GRID
/*GRID*/
$max-width:        692px;       // set page max-width
$width:            100%;        // set page max-width
$column-width:     5.9829%;     // set column width
$gutter-width:     2.5641%;     // set gutter width
$maximum-columns:  12;          // set max number of columns

@mixin clearfix {
    zoom: 1;

    &:before, &:after {
        content: "";
        display: table;
    }

    &:after {
        clear: both;
    }
}

@mixin border-box {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

@function columns($columns, $container-columns: $maximum-columns) {
    $width: $columns * $column-width;
    $container-width: $container-columns * $column-width;
    @return percentage($width / $container-width);
}

@function gutter($container-columns: $maximum-columns, $gutter: $gutter-width) {
    $container-width: $container-columns * $column-width + ($container-columns - 1) * $gutter-width;
    @return percentage($gutter / $container-width);
}

@mixin nesting {
    padding: 0; // no padding so nested elements fit

    & > div { // affect only immediate children
        float: left;
        margin-right: gutter;
        @include border-box; // math is hard. let’s use border-box
    }
}

@mixin row {
    width: $width; // make sure to fill its container
    max-width: $max-width; // not bigger than max width
    margin: 0 auto;
    @include clearfix; // clear our floats
    @include nesting; // add nesting styles to rows
}

.container {
    margin-right: auto;
    margin-left: auto;
    width: $width;
    max-width: $max-width;
    height: 100%;
    @include border-box;
}

@media (max-width: 767px) {
  .container {
    max-width: 100%;
  }
}

.row {
    height: 100%;
    @include row();
}

$i: 1;
@while $i < ($maximum-columns + 1) {
    .col-#{$i} {
        width: columns($i);
        height: 100%;
        padding-left: gutter();
        padding-right: gutter();

      /*HELP CLASS to disable left gutter*/
        &.p-l-0 {
            padding-left: 0;
        }
      /*HELP CLASS to disable right gutter*/
        &.p-r-0 {
            padding-right: 0;
        }
    }
    $i: $i + 1;
}


/* ===========================================================
 * pagepiling.js 1.5
 *
 * https://github.com/alvarotrigo/fullPage.js
 * MIT licensed
 *
 * Copyright (C) 2013 alvarotrigo.com - A project by Alvaro Trigo
 *
 * ========================================================== */
html, body {
    overflow:hidden;
    margin:0;
    padding:0;
    height: 100%;
    /*Avoid flicker on slides transitions for mobile phones #336 */
    -webkit-tap-highlight-color: rgba(0,0,0,0);
}

ui-view{
    width: 100%;
}
